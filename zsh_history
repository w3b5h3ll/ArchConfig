    1  clear
    2  ls
    3  cd
    4  ls
    5  vim .zshrc
    6  source .zshrc
    7  clear
    8  ls
    9  clear
   10  cd Workspace
   11  ls
   12  cd ../
   13  clear
   14  ls
   15  cd ArchConfig
   16  ls
   17  cat software_list.sh
   18  vim software_list.sh
   19  clear
   20  ls
   21  vim software_list.sh
   22  clear
   23  ls
   24  cd ../
   25  ls
   26  cd Workspace
   27  ls
   28  cat zsh_install.sh
   29  clear
   30  ls
   31  mkdir archive
   32  ls
   33  mv zsh_install.sh archive
   34  ls
   35  cd
   36  clear
   37  cat ArchConfig/personal_install.txt
   38  clear
   39  python3
   40  clear
   41  ls
   42  clear
   43  ls
   44  cd Workspace
   45  ls
   46  mkdir tools
   47  cd tools
   48  ls
   49  clear
   50  sudo pacman -Syyu
   51  clear
   52  sudo pacman -S bluez-tools bluez-utils bluez-deprecated-tools \\n               python-setuptools python-pydbus python-dbus\n               git gcc python-pip \\n
   53  sudo pacman -S bluez-tools bluez-deprecated-tools \\n               python-pydbus python-dbus\n               git gcc python-pip \\n
   54  sudo pacman -S bluez-tools \\n               python-pydbus python-dbus \\n               git gcc python-pip \\n
   55  clear
   56  ls
   57  mkdir cve-2023-45866
   58  cd cve-2023-45866
   59  git clone https://github.com/pybluez/pybluez.git
   60  clear
   61  ls
   62  cd pybluez
   63  ls
   64  python
   65  sudo python3 setup.py install
   66  clear
   67  ls
   68  cd ../
   69  ls
   70  clear
   71  git clone https://github.com/pentestfunctions/BlueDucky.git
   72  cd BlueDucky
   73  clear
   74  hciconfig
   75  clear
   76  python3 BlueDucky.py
   77  python3 BlueDucky.py --help
   78  sudo hciconfig hci0 up
   79  python3 BlueDucky.py --help
   80  python3 BlueDucky.py
   81  clear
   82  python3 BlueDucky.py 3c:13:5a:ca:be:7d
   83  hciconfig
   84  bluetoothctl devices
   85  ls
   86  vim BlueDucky.py
   87  python3 BlueDucky.py 3c:13:5a:ca:be:7d
   88  python3 BlueDucky.py
   89  clear
   90  python3 BlueDucky.py
   91  clear
   92  ls
   93  cd ../
   94  ls
   95  vim notes.txt
   96  mv notes.txt notes.md
   97  vim notes.md
   98  clear
   99  ls
  100  cd ../
  101  ls
  102  clear
  103  sudo pacman -S --needed base-devel openssl zlib xz\n
  104  clear
  105  man
  106  sudo pacman -S man-db
  107  clear
  108  man pacman
  109  clear
  110  cd ../
  111  ls
  112  curl https://pyenv.run | bash\n
  113  curl https://pyenv.run | bash
  114  git clone https://github.com/pyenv/pyenv.git ~/.pyenv
  115  cd ~/.pyenv
  116  ls
  117  src/configure && make -C src 
  118  vim ~/.zshrc
  119  echo 'export PYENV_ROOT="$HOME/.pyenv"' >> ~/.zshrc
  120  echo '[[ -d $PYENV_ROOT/bin ]] && export PATH="$PYENV_ROOT/bin:$PATH"' >> ~/.zshrc
  121  echo 'eval "$(pyenv init -)"' >> ~/.zshrc
  122  cd
  123  clear
  124  ls
  125  pyenv
  126  clear
  127  ls
  128  clear
  129  pyenv --help
  130  pyenv install 2.7
  131  pyenv versions
  132  cd
  133  ls
  134  cd Workspace/tools
  135  ls
  136  mkdir sweyntooth
  137  cd sweyntooth
  138  git clone https://github.com/Matheus-Garbelini/sweyntooth_bluetooth_low_energy_attacks.git
  139  clear
  140  ls
  141  pyenv --help
  142  pyenv versions
  143  pyenv global 2.7.18
  144  python
  145  pyenv version
  146  pip --version
  147  python
  148  cd Workspace/tools/sweyntooth
  149  ls
  150  pip --version
  151  ls
  152  cd sweyntooth_bluetooth_low_energy_attacks
  153  clear
  154  ls
  155  sudo su
  156  pyenv versions
  157  pyenv global system
  158  pip --version
  159  clear
  160  ls
  161  pyenv versions
  162  pyenv global 2.7.18
  163  pip --version
  164  cd Workspace
  165  ls
  166  pip install git+https://github.com/nccgroup/umap2.git#egg=umap2
  167  ls
  168  sudo su
  169  cd tools
  170  ls
  171  mkdir umap2
  172  cd umap2
  173  touch stick.img
  174  touch mtp_fs
  175  ls
  176  git clone https://github.com/BinyaminSharet/Mtp.git
  177  ls
  178  cd Mtp
  179  ls
  180  sudo su
  181  ls
  182  cd ../
  183  clear
  184  ls
  185  cd ../
  186  ls
  187  mkdir proxy_clash
  188  cd proxy_clash
  189  vim proxy.sh
  190  cd ../
  191  ls
  192  clear
  193  ls
  194  cd
  195  cd ArchConfig
  196  ls
  197  ./software_list.sh
  198  sudo su
  199  ls
  200  clear
  201  ls
  202  cat software_list.sh
  203  sudo history
  204  history
  205  sudo bash -c 'history'
  206  ls
  207  rm root.history root_history 
  208  ls
  209  rm c0r3dump.history c0r3dump_history 
  210  ls
  211  sudo ls -la /root
  212  sudo cat /root/.bash_history
  213  ls
  214  cd /root
  215  sudo su
  216  clear
  217  cd
  218  vim .zshrc
  219  cat .zsh_history
  220  clear
  221  ls
  222  cat .zsh_history
  223  vim .zshrc
  224  clear
  225  sudo pacman -S gnome
  226  clear
  227  cd ArchConfig
  228  ls
  229  ./software_list.sh
  230  cat software_list.sh
  231  history
  232  ls
  233  ./software_list.sh
  234  git add .
  235  git commit -m "update"
  236  git push
  237  git push --set-upstream origin master
  238  clear
  239  cd
  240  sudo poweroff
  241  cd
  242  history
  243  clear
  244  sudo systemctl enable gdm
  245  ls
  246  whoami
  247  iamyou
  248  neofetch
  249  ls
  250  clear
  251  ping baidu.com
  252  clear
  253  ls
  254  whoami
  255  ll
  256  sudo s
  257  clear
  258  cd ArchConfig
  259  ls
  260  clear
  261  neofetch
  262  ls
  263  cd ../
  264  ls
  265  cd Workspace
  266  ls
  267  df -h
  268  cd
  269  ls
  270  history
  271  ls
  272  clear
  273  cd ArchConfig
  274  ls
  275  cat personal_install.txt
  276  ls
  277  clear
  278  cd
  279  ls
  280  ls -la
  281  cd
  282  clear
  283  ls
  284  sudo poweroff
  285  ls
  286  ll
  287  clear
  288  gattool
  289  gatttool
  290  man gatttool
  291  gatttool --help
  292  hcitool lescan
  293  clear
  294  bettercap
  295  sudo pacman -S bettercap
  296  clear
  297  ll
  298  ls -la
  299  clear
  300  ls
  301  clear
  302  history|grep yay
  303  yay --help
  304  yay -S ubertooth
  305  yay -S ubertooth-git
  306  clear
  307  ls
  308  clear
  309  pip --version
  310  clear
  311  yay -S ubertooth-git 
  312  clear
  313  pyenv install 3.7
  314  clear
  315  pyenv versions
  316  ls .pyenv/
  317  clear
  318  pyenv install 3.7
  319  clear
  320  pyenv install 3.7
  321  vim .zshrc
  322  source .zshrc
  323  pyenv --help
  324  pyenv install 3.7
  325  pyenv update
  326  pyenv install 3.7
  327  cd .pyenv
  328  ls
  329  cd cach
  330  clear
  331  mkdir cache
  332  cd cache
  333  ls
  334  pyenv install 3.7
  335  wget https://www.python.org/ftp/python/3.7.17/Python-3.7.17.tar.xz
  336  ifconfig
  337  ping 192.168.124.103
  338  cd
  339  cd Workspace/tools
  340  ls
  341  cd proxy_clash
  342  ls
  343  ./proxy.sh 192.168.124.103
  344  chmod +x ./proxy.sh
  345  ./proxy.sh 192.168.124.103
  346  export https_proxy=http://192.168.124.103:7890 http_proxy=http://192.168.124.103:7890 all_proxy=socks5://192.168.124.103:7890
  347  wget https://www.python.org/ftp/python/3.7.17/Python-3.7.17.tar.xz
  348  pyenv install 3.7
  349  cd
  350  ArchConfig
  351  ls
  352  cat software_list.sh
  353  pacman -Qqen|grep uber
  354  yay --help
  355  yay -Qq
  356  pyenv uninstall 3.7
  357  pyenv uninstall 3.7.17
  358  clear
  359  sudo pacman -S tk
  360  pyenv install 3.7
  361  yay -Qqen
  362  cd
  363  clear
  364  pyenv versions
  365  pyenv global 3.7
  366  pip --version
  367  clear
  368  history|grep yay
  369  clear
  370  cd
  371  clear
  372  yay -Qm
  373  yay -S ubertooth
  374  pip --version
  375  ubertooth
  376  ubertooth-btle
  377  yay -Qm
  378  cd ArchConfig
  379  vim software_list.sh
  380  clear
  381  exit
  382  clear
  383  ubertooth-btle
  384  sudo ubertooth-btle
  385  cd Workspace
  386  ls
  387  cd tools
  388  ls
  389  mkdir ubertooth
  390  ls
  391  cd ubertooth
  392  ls
  393  vim notes.md
  394  clear
  395  ls
  396  sudo ubertooth-btle -f -c /tmp/pipe
  397  sudo wireshark
  398  rm /tmp/pipe
  399  sudo rm /tmp/pipe
  400  mkfifo /tmp/pipe
  401  clear
  402  sudo wireshark
  403  sudo ubertooth-btle -f -c /tmp/pipe
  404  ubertooth-btle -f -c /tmp/pipe
  405  sudo ubertooth-btle -f -c /tmp/pipe
  406  ls -l /tmp/pipe
  407  chmod 777 /tmp/pipe
  408  sudo ubertooth-btle -f -c /tmp/pipe
  409  cd ArchConfig
  410  ls
  411  ./software_list.sh
  412  clear
  413  cd
  414  clear
  415  df -h
  416  clear
  417  ls /usr/bin/dumpcap
  418  ls -l /usr/bin/dumpcap
  419  chmod +x /usr/bin/dumpcap
  420  sudo chmod +x /usr/bin/dumpcap
  421  ls -l /usr/bin/dumpcap
  422  adduser
  423  sudo usermod -aG wireshark c0r3dump
  424  ls /tmp/pipe
  425  rm /tmp/pipe
  426  clear
  427  mkfifo /tmp/pipe
  428  history|grep ubertooth
  429  ubertooth-btle -f -c /tmp/pipe
  430  sudo ubertooth-btle -f -c /tmp/pipe
  431  ls /tmp/pipe
  432  ls -l /tmp/pipe
  433  chmod 777 /tmp/pipe
  434  sudo ubertooth-btle -f -c /tmp/pipe
  435  rm /tmp/pipe
  436  ubertooth-btle -f -c /tmp/pipe
  437  sudo ubertooth-btle -f -c /tmp/pipe
  438  reboot
  439  sudo ubertooth-btle -f -c /tmp/pipe
  440  history|grep uber
  441  ls /dev/
  442  sudo ubertooth-btle -f -c /tmp/pipe
  443  _lsusb
  444  lsusb
  445  ubertooth-btle -f -c /tmp/pipe
  446  sudo su
  447  cd Workspace
  448  ls
  449  cd tools
  450  ls
  451  cd u
  452  cd ubertooth
  453  ls
  454  vim notes.md
  455  clear
  456  top
  457  htop
  458  clear
  459  sudo pacman -S htop
  460  clear
  461  htop
  462  clear
  463  yay -S nvm
  464  clear
  465  echo 'source /usr/share/nvm/init-nvm.sh' >> .zshrc
  466  nvm --version
  467  pip --version
  468  cd Workspace
  469  ls
  470  nvm install 8.0.0
  471  cd tools
  472  ls
  473  mkdir btlejuice
  474  cd btlejuice
  475  clear
  476  npm --version
  477  sudo pacman -S libudev0-shim
  478  clear
  479  pacman -Qqen
  480  pacman -Qqen|grep blue
  481  sudo pacman -S bluez-libs
  482  clear
  483  cd
  484  cd Workspace
  485  cd tools/proxy_clash
  486  ls
  487  ./proxy.sh 192.168.0.4
  488  export https_proxy=http://192.168.0.4:7890 http_proxy=http://192.168.0.4:7890 all_proxy=socks5://192.168.0.4:7890\n
  489  npm install btlejuice
  490  ping 192.168.0.4
  491  ls
  492  cd node_modules/.bin
  493  cd
  494  which node
  495  ls -l $(which node)
  496  sudo setcap cap_net_raw+eip $(eval readlink -f $(which node))\n
  497  clear
  498  cd Workspace/tools/btlejuice
  499  ls
  500  clear
  501  hciconfig
  502  clear
  503  ./node_modules/.bin/btlejuice-proxy
  504  ls
  505  npm install bluetooth-hci-socket
  506  clear
  507  pyenv versions
  508  pyenv global 2.7.18
  509  npm install bluetooth-hci-socket
  510  ls
  511  rm -rf ./*
  512  ls
  513  npm install btlejuice
  514  ls
  515  ./node_modules/.bin/btlejuice-proxy
  516  ls
  517  cat package-lock.json
  518  clear
  519  ls
  520  clear
  521  sudo poweroff
  522  ifconfig
  523  cd Workspace
  524  ls
  525  cd tools
  526  ls
  527  cd sweyntooth
  528  ls
  529  cd sweyntooth_bluetooth_low_energy_attacks
  530  ls
  531  clear
  532  ls
  533  pyenv versions
  534  python 
  535  clear
  536  python ./Telink_key_size_overflow.py /dev/ttyACM0 6c:b2:fd:1b:44:77
  537  sudo python ./Telink_key_size_overflow.py /dev/ttyACM0 6c:b2:fd:1b:44:77
  538  sudo python ./Telink_zero_ltk_installation.py /dev/ttyACM0 6c:b2:fd:1b:44:77
  539  sudo python ./extras/knob_tester_ble.py /dev/ttyACM0 6c:b2:fd:1b:44:77
  540  sudo python ./invalid_channel_map.py /dev/ttyACM0 6c:b2:fd:1b:44:77
  541  sudo python ./link_layer_length_overflow.py /dev/ttyACM0 6c:b2:fd:1b:44:77
  542  sudo python ./CC2640R2_public_key_crash.py /dev/ttyACM0 6c:b2:fd:1b:44:77
  543  sudo python ./CC_connection_req_crash.py /dev/ttyACM0 6c:b2:fd:1b:44:77
  544  sudo python ./extras/non_compliance_dhcheck_skip.py /dev/ttyACM0 6c:b2:fd:1b:44:77
  545  ls
  546  cd extras
  547  ls
  548  cd ../
  549  ls
  550  ls libs
  551  cd drivers
  552  ls
  553  cd ../
  554  ls
  555  cd ../
  556  ls
  557  clea
  558  clear
  559  ls
  560  cd sweyntooth_bluetooth_low_energy_attacks
  561  ls
  562  sudo python ./extras/non_compliance_dhcheck_skip.py /dev/ttyACM0 6c:b2:fd:1b:44:77
  563  ls captures
  564  ls extras
  565  ls
  566  sudo pacman -S fd
  567  fd install_smp_server.sh
  568  fd install_smp_server.sh ~/
  569  ls
  570  fd docker
  571  clear
  572  sudo python ./extras/non_compliance_dhcheck_skip.py /dev/ttyACM0 6c:b2:fd:1b:44:77
  573  fd install_smp_server.sh ~/
  574  ls
  575  ./install_sweyntooth.sh
  576  sudo ./install_sweyntooth.sh
  577  clear
  578  sudo python ./extras/non_compliance_dhcheck_skip.py /dev/ttyACM0 6c:b2:fd:1b:44:77
  579  ls
  580  cd ../
  581  ls
  582  cd ../
  583  ls
  584  cd cve-2023-45866
  585  ls
  586  cat notes.md
  587  ls
  588  cd BlueDucky
  589  ls
  590  clear
  591  history BlueDucky.py
  592  history|grep Blue
  593  pyenv versions
  594  pyenv global system
  595  clear
  596  python --version
  597  python ./BlueDucky.py ac:37:43:db:8f:26
  598  hciconfig
  599  python ./BlueDucky.py ac:37:43:db:8f:26
  600  python ./BlueDucky.py
  601  cd
  602  clear
  603  ls
  604  whoami
  605  clear
  606  sudo poweroff
  607  ls
  608  cd Workspace
  609  ls
  610  clear
  611  ls
  612  clear
  613  ls
  614  cd tools
  615  ls
  616  cd ../
  617  ls
  618  clear
  619  ls
  620  mkdir open-security-training2
  621  cd open-security-training2
  622  ls
  623  clear
  624  ls
  625  mkdir re3011
  626  ls
  627  cd re3011
  628  ls
  629  clear
  630  ls
  631  git clone https://gitlab.com/opensecuritytraining/re3011_cpp_re_binaries.git
  632  cd
  633  cd Workspace
  634  ls
  635  clear
  636  ls
  637  hciconfig
  638  bluetoothctl
  639  clear
  640  hcitool san
  641  hcitool scan
  642  btmgmt --help
  643  clear
  644  btmgmt --help
  645  btmgmt info 3c:13:5a:ca:b2:c5
  646  hcitool info 3c:13:5a:ca:b2:c5
  647  sudo hcitool info 3c:13:5a:ca:b2:c5
  648  bluetoothctl
  649  sudo hcitool info 3c:13:5a:ca:b2:c5
  650  btmgmt info 3c:13:5a:ca:b2:c5
  651  bluetoothctl
  652  btmon
  653  sudo btmon
  654  bluetoothctl
  655  hcitool info 3C:13:5A:CA:BE:7D
  656  hciconfig -a
  657  hciconfig
  658  hciconfig -a
  659  sudo poweroff
  660  ls
  661  history
  662  ls
  663  cat ./.zsh_history
  664  ls
  665  cd Workspace/tools
  666  ls
  667  git clone https://gitlab.com/expliot_framework/expliot.git
  668  ls
  669  cd expliot
  670  ls
  671  pyenv version
  672  ls
  673  python --version
  674  clear
  675  ls
  676  cd expliot
  677  ls
  678  cd ../
  679  ls
  680  ll
  681  cd container
  682  ls
  683  cd ../
  684  ls
  685  cat README.md
  686  ls
  687  cat MANIFEST.in
  688  cd ../.../
  689  cd ../../
  690  ls
  691  clear
  692  pip install expliot
  693  pip --version
  694  pip install expliot
  695  pyenv --help
  696  pyenv versions
  697  pyenv global 3.7.17
  698  pip --version
  699  pip install expliot
  700  clear
  701  pip install expliot -i https://pypi.tuna.tsinghua.edu.cn/simple
  702  expliot
  703  clear
  704  expliot
  705  sudo expliot
  706  bluetoothctl
  707  hciconfig
  708  hciconfig -a
  709  clear
  710  gatttool
  711  sudo poweroff
  712  hciconfig
  713  hcitool info 6c:b2:fd:1b:44:77
  714  sudo hcitool info 6c:b2:fd:1b:44:77
  715  bluetoothctl
  716  sudo hcitool info 6c:b2:fd:1b:44:77
  717  bluetoothctl
  718  sudo hcitool info 6c:b2:fd:1b:44:77
  719  sudo poweroff
  720  whoami
  721  ls
  722  cd Workspace
  723  ls
  724  cd open-security-training2
  725  ls
  726  cd re3011
  727  ls
  728  cd ../
  729  ls
  730  clear
  731  ls
  732  mkdir tc1101
  733  cd tc1101
  734  ls
  735  clear
  736  git clone https://gitlab.com/opensecuritytraining/TC1101_TPM_Essentials_slides_and_subtitles.git
  737  ls
  738  cd TC1101_TPM_Essentials_slides_and_subtitles
  739  ls
  740  cd si
  741  cd slides
  742  ls
  743  clear
  744  ls
  745  cd pdf
  746  ls
  747  history
  748  ls
  749  cd
  750  ls
  751  cd ArchConfig
  752  ls
  753  ./software_list.sh
  754  ls
  755  cat zsh_history
  756  cat c0r3dump_history
  757  ls
  758  cat personal_install.txt
  759  ls
  760  vim software_list.sh
  761  history
  762  history>zsh_history
  763  ls
  764  cat zsh_history
  765  ls
  766  vim software_list.sh
  767  ./software_list.sh
  768  vim software_list.sh
  769  ./software_list.sh
  770  cat root_history
  771  clear
  772  ls
  773  cat personal_install.txt
  774  clear
  775  ls
  776  sudo pacman -S xpdf
  777  clear
  778  ls
  779  cat software_list.sh
  780  man history
  781  history --help
  782  history -h
  783  man history
  784  history
  785  history -E
  786  clear
  787  ls
  788  vim software_list.sh
  789  clear
  790  ./software_list.sh
  791  ls
  792  cat zsh_history
  793  vim software_list.sh
  794  fc -l
  795  fc -l 1
  796  clear
  797  vim software_list.sh
  798  man fc
  799  fc --help
  800  vim software_list.sh
  801  ./software_list.sh
  802  ls
  803  cat zsh_history
  804  vim software_list.sh
  805  ./software_list.sh
  806  cat zsh_history
  807  vim software_list.sh
  808  ls
  809  cat software_list.sh
  810  vim software_list.sh
  811  cat software_list.sh
  812  ls
  813  mv software_list.sh software_list.sh.bak
  814  vim software_list.sh
  815  ls
  816  chmod +x ./software_list.sh
  817  ./software_list.sh
  818  vim software_list.sh
  819  ./software_list.sh
  820  mv software_list.sh.bak software_list.sh
  821  vim software_list.sh
  822  clear
  823  ls
  824  rm zsh_history
  825  ll
  826  clear
  827  ls
  828  cat software_list.sh
  829  expect
  830  sudo pacman -S expect
  831  clear
  832  ls
  833  vim zsh_history.exp
  834  clear
  835  zsh
  836  exit
  837  clear
  838  ls
  839  zsh
  840  history
  841  exit
  842  clear
  843  ls
  844  chmod +x ./zsh_history.exp
  845  ./zsh_history.exp
  846  history > zsh_history
  847  exit
  848  cat zsh_history
  849  clear
  850  ls
  851  vim software_list.sh
  852  clear
  853  ls
  854  ./software_list.sh
  855  history > zsh_history
  856  exit
  857  rm zsh_history
  858  clear
  859  ./software_list.sh
  860  history > zsh_history
  861  exit
  862  ls
  863  cat zsh_history
  864  clear
  865  ls
  866  git add .
  867  git commit -m "add more ble tools"
  868  git push
  869  clear
  870  cd
  871  clear
  872  ls
  873  xpdf TC1101.A\ -\ What\ will\ we\ learn.pdf
  874  whoami
  875  history
  876  clear
  877  df -h
  878  ls /boot
  879  clear
  880  dmesg
  881  sudo dmesg
  882  clear
  883  ls
  884  df -g
  885  clear
  886  uname -ra
  887  neofetch
  888  sudo poweroff
  889  cd Workspace
  890  ls
  891  cd tools
  892  ls
  893  mkdir buildroot
  894  cd buildroot
  895  ls
  896  clear
  897  ls
  898  wget https://www.buildroot.org/downloads/buildroot-2024.05.tar.gz
  899  ls
  900  tar -zxvf buildroot-2024.05.tar.gz
  901  ls
  902  clear
  903  ls
  904  cd buildroot-2024.05
  905  ls
  906  pyenv version
  907  clear
  908  ls
  909  make menuconfig
  910  clear
  911  cd
  912  clear
  913  sgpt
  914  clear
  915  cd
  916  clear
  917  pip --version
  918  clear
  919  pip install shell-gpt
  920  clear
  921  pip install shell-gpt -i https://pypi.tuna.tsinghua.edu.cn/simple
  922  sgpt
  923  sgpt "hello"
  924  vim .config/shell_gpt/.sgptrc
  925  spgt
  926  sgpt
  927  pip uninstall shell-gpt
  928  clear
  929  pyenv global system
  930  clear
  931  pip install shell-gpt -i https://pypi.tuna.tsinghua.edu.cn/simple
  932  clear
  933  ls
  934  pip
  935  pip install shell-gpt -i https://pypi.tuna.tsinghua.edu.cn/simple
  936  python --version
  937  python -m pip install shell-gpt -i https://pypi.tuna.tsinghua.edu.cn/simple
  938  clear
  939  ls
  940  pyenv versions
  941  history|grep pyenv
  942  clear
  943  pyenv install 3.10
  944  cd Workspace/tools
  945  ls
  946  cd proxy_clash
  947  ls
  948  ./proxy.sh 192.168.0.5
  949  export https_proxy=http://192.168.0.5:7890 http_proxy=http://192.168.0.5:7890 all_proxy=socks5://192.168.0.5:7890
  950  pyenv install 3.10
  951  pyenv versions
  952  pyenv global 3.10.14
  953  clear
  954  pip install shell-gpt -i https://pypi.tuna.tsinghua.edu.cn/simple
  955  clear
  956  sgpt
  957  pip install httpx
  958  clear
  959  sgpt
  960  pip install httpx[socks]
  961  pip install socks
  962  sgpt
  963  pip install socksio
  964  clear
  965  sgpt
  966  sgpt "如何在android手机上使用hcitool工具"
  967  sgpt --help
  968  sgpt --chat ble "可否编写android应用，来获取已经连接的蓝牙设备，协议版本等信息"
  969  clear
  970  sgpt --chat ble "有没有工具，可以直接查看已连接的设备ble协议版本"
  971  hciconfig
  972  sudo hcitool info ac:37:43:dc:db:8f:26
  973  sudo hcitool info ac:37:43:db:8f:26
  974  clear
  975  sudo poweroff
  976  ls
  977  df -h
  978  fdisk
  979  fdisk -l
  980  sudo fdisk -l
  981  clear
  982  ls
  983  free -h
  984  history|grep code
  985  cat ArchConfig/software_list.sh
  986  cat ArchConfig/personal_install.txt
  987  sgpt "arch linux 如何删除 通过 pacman安装的软件"
  988  sudo pacman -R code
  989  clear
  990  sgpt "arch linux 如何安装vscode,而不是code-oss呢"
  991  yay -S visual-studio-code-bin
  992  ls
  993  clear
  994  ls
  995  cd Workspace
  996  ls
  997  mkdir foundry
  998  clear
  999  curl -L https://foundry.paradigm.xyz | bash
 1000  ls
 1001  ping baidu.com
 1002  ping google.com
 1003  clear
 1004  ls
 1005  cd foundry
 1006  ls
 1007  clear
 1008  curl -L https://foundry.paradigm.xyz | bash\n
 1009  clear
 1010  ls
 1011  curl -L https://foundry.paradigm.xyz | bash\n
 1012  ls
 1013  vim foundryup_install.sh
 1014  ls
 1015  bash ./foundryup_install.sh
 1016  clear
 1017  ls
 1018  bash ./foundryup_install.sh
 1019  ping 185.199.108.133
 1020  vim /etc/hosts
 1021  sudo vim /etc/hosts
 1022  sudo su
 1023  su 
 1024  sudo su
 1025  bash ./foundryup_install.sh
 1026  cat ~/.zshenv
 1027  cat ~/.zshrc
 1028  ls
 1029  cat ~/.zshenv
 1030  vim ~/.zshrc
 1031  source ~/.zshrc
 1032  clear
 1033  ls
 1034  foundryup
 1035  ls
 1036  forge
 1037  which forge
 1038  clear
 1039  ls
 1040  forge --version
 1041  clear
 1042  ls
 1043  code .
 1044  forge init
 1045  forge init --force
 1046  ls
 1047  clear
 1048  tree
 1049  sudo pacman -S tree
 1050  clear
 1051  sudo pacman -S tree
 1052  tree
 1053  cd src
 1054  touch SimpleStorage.sol
 1055  file SimpleStorage.sol
 1056  clear
 1057  ls
 1058  cd ../
 1059  ls
 1060  clear
 1061  forge build
 1062  clear
 1063  ls
 1064  whoami
 1065  cd
 1066  cer
 1067  clear
 1068  cd ArchConfig
 1069  ls
 1070  ./software_list.sh
 1071  history > zsh_history
 1072  exit
 1073  ls
 1074  clear
 1075  ls
 1076  cat root_history
 1077  ls
 1078  clear
 1079  ls
 1080  ll
 1081  ls
 1082  sudo poweroff
 1083  ls
 1084  sudo su
 1085  clear
 1086  whoami
 1087  clear
 1088  cd Workspace
 1089  ls
 1090  git clone https://github.com/w3b5h3ll/CS106L.git
 1091  cd CS106L
 1092  ls
 1093  clear
 1094  code .
 1095  touch notes.txt
 1096  mv notes.txt notes.md
 1097  clear
 1098  sgpt "C++语言中,`std::make_pair方法说明`"
 1099  sgpt "C++语言中,std::make_pair方法说明"
 1100  clear
 1101  ls
 1102  touch quadratic.cpp
 1103  touch Makefile
 1104  clear
 1105  ls
 1106  make main
 1107  ls
 1108  clear
 1109  make all
 1110  ls
 1111  ./main
 1112  make all
 1113  clear
 1114  ./main
 1115  clear
 1116  make all
 1117  ./main
 1118  make clean
 1119  clear
 1120  make all
 1121  ./main
 1122  make clean
 1123  make all
 1124  ./main
 1125  ls
 1126  clear
 1127  make all
 1128  ./main
 1129  make all
 1130  ./main
 1131  make clean
 1132  make all
 1133  ./main
 1134  make all
 1135  ./main
 1136  make all
 1137  ./main
 1138  make all
 1139  ./main
 1140  clear
 1141  ls
 1142  clear
 1143  ls
 1144  mkdir code
 1145  ls
 1146  mv main Makefile quadratic.cpp code
 1147  ls
 1148  clear
 1149  cd code
 1150  ls
 1151  clear
 1152  touch narrow_convert.cpp
 1153  clear
 1154  clang++ ./narrow_convert.cpp -o narrow_convert
 1155  ./narrow_convert
 1156  clang++ ./narrow_convert.cpp -o narrow_convert
 1157  clear
 1158  touch l-value_test.cpp
 1159  sgpt "std::pow函数"
 1160  clear
 1161  clang++ -o ./l-value_test l-value_test.cpp
 1162  yay -S typora-free-cn
 1163  ping baidu.com
 1164  yay -S typora-free
 1165  clear
 1166  touch stringstram.cpp
 1167  clang++ -o ./stringstram stringstram.cpp
 1168  sgpt ""
 1169  sgpt "```代码报错^[[200~stringstram.cpp:8:23: error: implicit instantiation of undefined template 'std::basic_stringstream<char>'```"
 1170  /usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.1.1/../../../../include/c++/14.1.1/iosfwd:110:11: note: template is declared here
 1171  clear
 1172  sgpt "sgpt 程序如何输入代码"
 1173  clang++ -o ./stringstram stringstram.cpp
 1174  clear
 1175  ./stringstram
 1176  touch output_buffer.cpp
 1177  clang++ -o output_buffer output_buffer.cpp
 1178  ./output_buffer
 1179  clang++ -o output_buffer output_buffer.cpp
 1180  ./output_buffer
 1181  clang++ -o output_buffer output_buffer.cpp
 1182  ./output_buffer
 1183  clear
 1184  touch cin_buffer.cpp
 1185  clang++ -o cin_buffer cin_buffer.cpp
 1186  ./cin_buffer
 1187  clang++ -o cin_buffer cin_buffer.cpp
 1188  ./cin_buffer
 1189  clang++ -o cin_buffer cin_buffer.cpp
 1190  ./cin_buffer
 1191  clang++ -o cin_buffer cin_buffer.cpp
 1192  ./cin_buffer
 1193  clang++ -o cin_buffer cin_buffer.cpp
 1194  ./cin_buffer
 1195  clang++ -o cin_buffer cin_buffer.cpp
 1196  ./cin_buffer
 1197  clang++ -o cin_buffer cin_buffer.cpp
 1198  ./cin_buffer
 1199  clang++ -o cin_buffer cin_buffer.cpp
 1200  ./cin_buffer
 1201  cd
 1202  cd ArchConfig
 1203  ls
 1204  ./software_list.sh
 1205  history > zsh_history
 1206  exit
 1207  clear
 1208  ls
 1209  ll
 1210  clear
 1211  ls
 1212  touch lecture4-code.cpp
 1213  clang++ -o lecture4-code lecture4-code.cpp
 1214  ./lecture4-code
 1215  ls
 1216  cat append.txt
 1217  clear
 1218  ./lecture4-code
 1219  clang++ -o lecture4-code lecture4-code.cpp
 1220  ./lecture4-code
 1221  cd ArchConfig
 1222  ls
 1223  sudo poweroff
 1224  cd Workspace
 1225  ls
 1226  clear
 1227  sudo poweroff
 1228  clear
 1229  ls
 1230  cd Workspace
 1231  ls
 1232  cd CS106L
 1233  ls
 1234  code .
 1235  cd
 1236  cd ArchConfig
 1237  ls
 1238  git push
 1239  git history
 1240  git log
 1241  clear
 1242  ls
 1243  ./software_list.sh
